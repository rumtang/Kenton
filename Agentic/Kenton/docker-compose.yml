version: '3.8'

services:
  # Redis service for conversation memory
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API service
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8001:8001"
      - "3000:3000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - USE_REDIS=true
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - FINANCIAL_MODELING_PREP_API_KEY=${FINANCIAL_MODELING_PREP_API_KEY}
      - GDELT_API_KEY=${GDELT_API_KEY}
      - HOST=0.0.0.0
      - PORT=8001
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: kenton-network